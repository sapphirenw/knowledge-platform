version: '3.8'

networks:
  aicontent_network:
    name: aicontent_network

volumes:
  aicontent-pg-data:

services:
  aicontent-db:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: aicontent-db
    volumes:
      - aicontent-pg-data:/var/lib/postgresql/data # Mount host data directory to the container
      - ./postgresql.conf:/etc/postgresql.conf # postgres conf file
    environment:
      POSTGRES_PASSWORD: <PG_PASSWORD>
      POSTGRES_USER: aicontent
      POSTGRES_DB: aicontent
    networks:
      - aicontent_network

  aicontent-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: aicontent-api
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: postgresql://aicontent:<PG_PASSWORD>@aicontent-db:5432/aicontent
      OPENAI_API_KEY: ...
      GEMINI_API_KEY: ...
      ANTHROPIC_API_KEY: ...
      AWS_ACCESS_KEY_ID: ...
      AWS_SECRET_ACCESS_KEY: ...
      WEBSEARCH_ENDPOINT: https://search.jakelanders.com
      SERVER_HOST: "0.0.0.0"
      SERVER_PORT: 8080
      API_MASTER_AUTH_TOKEN: ...
    networks:
      - aicontent_network
    depends_on:
      - aicontent-db
  
  aicontent-webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    container_name: aicontent-webapp
    ports:
      - "3000:3000"
    environment:
      INTERNAL_API_HOST: http://aicontent-api:8080 # for running connections to the host faster through the server network
      EXTERNAL_API_HOST: http://0.0.0.0:8080 # for when the client needs to hit the api directly, needed in ws
      MAX_FILE_SIZE: '1000000' # 1mb
    networks:
      - aicontent_network
    depends_on:
      - aicontent-db
      - aicontent-api